# 3. Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов:
# сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение,
#                                               умножение и обычное (не целочисленное) деление клеток, соответственно.
# В методе деления должно осуществляться округление значения до целого числа.

# Сложение. Объединение двух клеток.При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
#
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек
#                                                     двух клеток больше нуля, иначе выводить соответствующее сообщение.
#
# Умножение. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
#
# Деление. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
#
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
#
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
#
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n**.
#
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n*****.

class Cell:
    def __init__(self, n_cell):
        self.n_cell = n_cell

    def __str__(self):
        return str(self.n_cell)

    def __add__(self, other):
        return 'Сумма клеток равна: ' + str(self.n_cell + other.n_cell)

    def __sub__(self, other):
        if self.n_cell > other.n_cell:
            return str(self.n_cell - other.n_cell)
        elif self.n_cell == other.n_cell:
            return 'Количество ячеек в клетках равны'
        else: return 'Количество ячеек в 1ой клетке меньше, чем в 2ой'

    def __mul__(self, other):
        return 'Произведение клеток равно: ' + str(self.n_cell * other.n_cell)

    def __truediv__(self, other):
        return 'Деление клеток равно: ' + str(self.n_cell / other.n_cell)

    def make_order(self, m):
        return 'Разделение клетки по рядам: ' + '\n' + '\n'.join(['*' * m for _ in range(self.n_cell // m)]) + '\n' + '*' * (self.n_cell % m)

cell_1 = Cell(16)
cell_2 = Cell(20)

print(cell_1.make_order(5))
print(cell_1/cell_2)
print(cell_2 + cell_1)
print(cell_1 * cell_2)

