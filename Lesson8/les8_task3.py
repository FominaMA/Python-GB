# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
#
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
#                                                                                             только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class TextError(ValueError):
    def __init__(self, text_error):
        self.text_error = text_error

i = 1
list = []

while i > 0:
    try:
        new_el = input('Введите новый элемент списка (число!): ')
        if new_el == 'stop':
            print(list)
            break
        elif ord(new_el[0]) > 58 or ord(new_el[0]) < 47:
            raise TextError("Это не число!")
        else:
            list.append(new_el)
    except TextError as txt:
        print(txt)